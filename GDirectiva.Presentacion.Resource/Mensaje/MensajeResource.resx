<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ComentarioValido" xml:space="preserve">
    <value>Comentario Válido</value>
  </data>
  <data name="ConfirmacionActivacion" xml:space="preserve">
    <value>¿Está seguro de activar el registro?</value>
  </data>
  <data name="ConfirmacionEliminacion" xml:space="preserve">
    <value>¿Está seguro de eliminar el registro?</value>
  </data>
  <data name="ConfirmacionGuardar" xml:space="preserve">
    <value>¿Está seguro de grabar los cambios solicitados?</value>
  </data>
  <data name="DebeSeleccionarFecha" xml:space="preserve">
    <value>Debe seleccionar una fecha.</value>
  </data>
  <data name="DebeSeleccionarRegistro" xml:space="preserve">
    <value>Debe seleccionar al menos un registro.</value>
  </data>
  <data name="DebeSeleccionarUnRegistro" xml:space="preserve">
    <value>Debe seleccionar sólo un registro.</value>
  </data>
  <data name="ErroralGrabar" xml:space="preserve">
    <value>Se produjo un error al grabar el registro.</value>
  </data>
  <data name="ErrorCargarViewModel" xml:space="preserve">
    <value>View model no definido.</value>
  </data>
  <data name="EtiquetaErrorRegistro" xml:space="preserve">
    <value>Ocurrió un error inesperado. Inténtelo nuevamente</value>
  </data>
  <data name="EtiquetaMensajeDesactivar" xml:space="preserve">
    <value>El usuario estará activo hasta</value>
  </data>
  <data name="EtiquetaNoEjecutoNingunProceso" xml:space="preserve">
    <value>No se ejecuto ningun proceso.</value>
  </data>
  <data name="ExistenciaCodigoDemanda" xml:space="preserve">
    <value>Código de Demanda ya existe</value>
  </data>
  <data name="FechaRegistroDistinta" xml:space="preserve">
    <value>Fecha de depósito distinto.</value>
  </data>
  <data name="ImportePagoDistinta" xml:space="preserve">
    <value>Importe de pago distinto.</value>
  </data>
  <data name="InformacionIngresarFiltro" xml:space="preserve">
    <value>Debe ingresar al menos un filtro de búsqueda.</value>
  </data>
  <data name="InformacionPreFiltro" xml:space="preserve">
    <value>La información mostrada corresponde a la</value>
  </data>
  <data name="MensajeException" xml:space="preserve">
    <value>La solicitud no ha podido ser procesada. Comuníquese con el Administrador del Sistema.</value>
  </data>
  <data name="MensajeLaContraseniaAutogeneradaEs" xml:space="preserve">
    <value>La contraseña autogenerada es:</value>
  </data>
  <data name="RegistrosNoCoinciden" xml:space="preserve">
    <value>Los registros seleccionados no coinciden:</value>
  </data>
  <data name="SeActivoRegistro" xml:space="preserve">
    <value>Se activó el registro con éxito.</value>
  </data>
  <data name="SeAnuloRegistro" xml:space="preserve">
    <value>Se anuló registro con éxito.</value>
  </data>
  <data name="SeEliminoRegistro" xml:space="preserve">
    <value>Se eliminó el registro con éxito.</value>
  </data>
  <data name="SeGuardoInformacionExito" xml:space="preserve">
    <value>Se guardó la información con éxito.</value>
  </data>
  <data name="SeleccioneFiltro" xml:space="preserve">
    <value>Al menos un parámetro de filtro correcto</value>
  </data>
  <data name="Texto1" xml:space="preserve">
    <value>Se cargaron</value>
  </data>
  <data name="Texto2" xml:space="preserve">
    <value>registros con éxito y</value>
  </data>
  <data name="Texto3" xml:space="preserve">
    <value>sin éxito.</value>
  </data>
  <data name="TextoEliminacion" xml:space="preserve">
    <value>Por favor confirme la eliminación de los registros seleccionados.</value>
  </data>
  <data name="TextoReactivacion" xml:space="preserve">
    <value>Por favor confirme la activación del registro.</value>
  </data>
</root>